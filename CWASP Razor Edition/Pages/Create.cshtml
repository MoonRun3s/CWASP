@page 
@model CWASP_Razor_Edition.Pages.CreateModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Ticket</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" id="form">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Ticket.LoanerOTO" class="control-label"></label>
                <input asp-for="Ticket.LoanerOTO" class="form-control" />
                <span asp-validation-for="Ticket.LoanerOTO" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Ticket.StudentName" class="control-label"></label>
                <input asp-for="Ticket.StudentName" class="form-control" />
                <span asp-validation-for="Ticket.StudentName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Ticket.LogTime" class="control-label"></label>
                <input asp-for="Ticket.LogTime" class="form-control" />
                <span asp-validation-for="Ticket.LogTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Ticket.Reason" class="control-label"></label>
                <select asp-for="Ticket.Reason">
                    <option value="Home">Home</option>
                    <option value="Repair">Repair</option>
                    <option value="Charge">Charge</option>
                    <option value="Lost">Lost</option>
                    <option value="Other">Other</option>
                </select>
                <span asp-validation-for="Ticket.Reason" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Ticket.Description" class="control-label"></label>
                <input asp-for="Ticket.Description" class="form-control" />
                <span asp-validation-for="Ticket.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <h6>@ViewData["Message"]</h6>
            </div>
            <div class="form-group">
                <input type="submit" id="createButton" value="Create" class="btn btn-primary" asp-page-handler="Submit" />
                <input type="submit" value="Check Duplicates" class="btn btn-primary" asp-page-handler="CheckDuplicates" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @*
        The following scripts send a request to the server to update all index views.
        They enable live-updating core functionality.
    *@

    <script type="text/javascript" src="~/js/signalr/dist/browser/signalr.js"></script>
    <script type="text/javascript">
        document.addEventListener("DOMContentLoaded", () => {
            const connection = new signalR.HubConnectionBuilder()       // Create the SignalR Hub connection.
                .configureLogging(signalR.LogLevel.Information)
                .withUrl("/Hubs/controlHub")
                .build();

            document.getElementById("createButton").addEventListener("click", function (event) {
                connection.invoke("AllCall").catch(function (err) {     // Talk to server.
                    return console.error(err.toString());
                });
            });

            async function start() {
                try {
                    await connection.start();
                    console.log("SignalR connected.");
                } catch (err) {
                    console.log(err);
                    console.log("Retrying SignalR connection in 10 seconds...");
                    setTimeout(start, 10000);
                }
            };

            connection.onclose(async () => {
                await start();
            });

            start();
        });
    </script>

    <script>
        $(document).ready(function () {
            let msg = $("#Message").val();
            if (msg != undefined) {
                if (msg.length > 0) {
                    swal.fire(msg);
                };
            }
         });
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}