@page
@model CWASP_Razor_Edition.Pages.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

<form>
    <p style="display:inline">
        OTO #: <input type="text" asp-for="SearchOTO" />
        Student Name: <input type="text" asp-for="SearchString"/>
        Reason:
        <select asp-for="TicketReason" asp-items="Model.Reason">
            <option value="">All</option>
        </select>
        <input type="submit" value="Filter" id="Filter" />
    </p>
</form>

<div id="grid">
    <!-- Render the table using a partial view -->
    <partial name="_DataList" model="@Model.Ticket" />
</div>
@section scripts {
    @*
        The following scripts send a request to the server to update all index views.
        They enable live-updating core functionality.
    *@

    <script type="text/javascript" src="~/js/signalr/dist/browser/signalr.js"></script>
    <script type="text/javascript">
        document.addEventListener("DOMContentLoaded", () => {
            const connection = new signalR.HubConnectionBuilder()       // Create the SignalR Hub connection.
                .configureLogging(signalR.LogLevel.Information)
                .withUrl("/Hubs/controlHub")
                .build();

            function update() {
                console.log("SignalR recieved an update request.");
                $('#grid').load('/Index?handler=DataListPartial');      // Load the partial view by calling the DataListPartial page handler.
            }

            connection.on("UpdatePartialView", function () {            // Listen for the command to refresh the partial view.
                setTimeout(update, 2000)                                // TEMPFIX: wait 2 seconds to allow db queries to finish so changes are displayed.
            });

            async function start() {
                try {
                    await connection.start();
                    console.log("SignalR connected.");
                } catch (err) {
                    console.log(err);
                    console.log("Retrying SignalR connection in 10 seconds...");
                    setTimeout(start, 10000);
                }
            };

            connection.onclose(async () => {
                await start();
            });

            start();
        });
    </script>
}